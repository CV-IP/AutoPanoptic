#!/bin/bash
EXP="coco_architecture_search"
STORE_DIR="./cachemodel/"
NAME="coco"
OUTPUT_DIR=${STORE_DIR}${EXP}
INFO="coco_architecture_search"
config="configs/autopanoptic/autopanoptic_architecture_search.yaml"
NGPUS=8
TRAIN_BATCH_SIZE=16
BASE_LR=0.02
ITERATION=90000
STEPS="(60000,80000)"
SCHEDULER="cosine"
ETA_MIN=0
TEST_BATCH_SIZE=16
BUILD="None"
TRAIN_SINGLE_MODEL=False
TRAIN_SUPERNET=True
BACKBONE="AutoPanoptic-COCO-FPN-search"
BOX="FPN2MLPFeatureExtractor"
MASK="AutoPanoptic_MaskRCNNFPNFeatureExtractor_search"
SEG="AutoPanoptic_Segmentation_Branch_search"
WEIGHT=$CURRENT_DIR/pretrain/autopanoptic_imagenet_pretrain.pkl
lamda_seg=0.3
CYCLE=5
TOPK=3
SKIP_NAS_TEST=False
WARMUP_FACTOR=0.1
WARMUP_ITERS=3000
STEM_OUT_CHANNELS=48
WORKERS=4

cd $CURRENT_DIR/maskrcnn-benchmark

python -m torch.distributed.launch --nproc_per_node=$NGPUS tools/train_net.py --config-file $config --build-model $BUILD \
SOLVER.IMS_PER_BATCH $TRAIN_BATCH_SIZE SOLVER.BASE_LR $BASE_LR SOLVER.MAX_ITER $ITERATION SOLVER.STEPS $STEPS SOLVER.SCHEDULER $SCHEDULER SOLVER.ETA_MIN $ETA_MIN TEST.IMS_PER_BATCH $TEST_BATCH_SIZE INFO $INFO DATALOADER.NUM_WORKERS $WORKERS MODEL.SEG_BRANCH.LAMDA_SEGMENTATION $lamda_seg \
MODEL.BACKBONE.CONV_BODY $BACKBONE MODEL.ROI_BOX_HEAD.FEATURE_EXTRACTOR $BOX MODEL.ROI_MASK_HEAD.FEATURE_EXTRACTOR $MASK MODEL.SEG_BRANCH.SEGMENT_BRANCH $SEG MODEL.RESNETS.STEM_OUT_CHANNELS $STEM_OUT_CHANNELS \
NAS.TRAIN_SUPERNET $TRAIN_SUPERNET NAS.TRAIN_SINGLE_MODEL $TRAIN_SINGLE_MODEL NAS.TEST_CYCLE $CYCLE NAS.TOPK $TOPK NAS.SKIP_NAS_TEST $SKIP_NAS_TEST \
EXP $EXP OUTPUT_DIR $OUTPUT_DIR DATASETS.NAME $NAME \
SOLVER.WARMUP_FACTOR $WARMUP_FACTOR SOLVER.WARMUP_ITERS $WARMUP_ITERS \
MODEL.WEIGHT $WEIGHT \

